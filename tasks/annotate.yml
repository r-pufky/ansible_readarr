---
# yamllint disable rule:line-length
###############################################################################
# Annotate User Configuration
###############################################################################
# Sanitize (standardize with default values if not set) Readarr configuration.
#
# Readarr does not consistently apply casing to XML settings and are frequently
# mis-spelled, inconsistently spelled, ordered, or strings used for boolean
# values; so we have to explicitly map those settings to the equivalent role
# settings. Order does not matter but will change based on WebUI usage and what
# values were changed last. This can lead to 'changed' configurations when no
# values were actually changed.
#
# Use r_pufky.data.v3 data annotations to enforce consistency and validation
# checks.
#
# Generates:
#   _readarr_map: list of dict - Annotated config map.
#   _readarr_order: list of str - Config section order.
#
# Reference:
# * https://readarr.audio/
# * https://wiki.servarr.com/readarr
# * https://github.com/Readarr/Readarr/releases
# * https://github.com/Servarr/Wiki/blob/master/servarr/servarr-install-script.sh

- name: 'Annotate | sanitize & annotate service defaults'
  ansible.builtin.set_fact:  # noqa jinja[spacing] readability.
    _readarr_srv_version: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_version,
        default=readarr_role_validate_version,
        hint='str',
        order=1
        )
      }}"
    _readarr_srv_delete_old_versions_enable: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_delete_old_versions_enable,
        default=true,
        hint='bool',
        order=2
        )
      }}"
    _readarr_srv_config_dir: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_config_dir,
        data=readarr_srv_config_dir | regex_replace('\\/$', '') ~ '/',
        default='/data/readarr/config',
        hint='str',
        order=3
        )
      }}"
    _readarr_srv_u_mask: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_u_mask,
        default='0002',
        hint='str',
        order=4
        )
      }}"
    _readarr_srv_force_overwrite: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_force_overwrite,
        default=false,
        hint='bool',
        order=5
        )
      }}"
    _readarr_srv_migrate_metadata: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_migrate_metadata,
        _files=(
          readarr_role_repo_extract_migrate_files
          if not readarr_srv_migrate_metadata else
          readarr_role_repo_extract_migrate_files + ['MediaCover']
        ),
        default=true,
        hint='bool',
        order=6
        )
      }}"
    _readarr_srv_permissions_recursive_enable: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_permissions_recursive_enable,
        default=false,
        hint='bool',
        order=7
        )
      }}"
    _readarr_srv_restart_daily_enable: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_restart_daily_enable,
        default=true,
        hint='bool',
        order=8
        )
      }}"
    _readarr_srv_force_config_only_enable: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_force_config_only_enable,
        default=false,
        hint='bool',
        order=9
        )
      }}"
    _readarr_srv_user: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_user,
        default='media',
        hint='str',
        _uid='',
        order=10
        )
      }}"
    _readarr_srv_group: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_group,
        default='media',
        hint='str',
        _gid='',
        order=11
        )
      }}"
    _readarr_srv_create_user: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_create_user,
        default=true,
        hint='bool',
        order=12
        )
      }}"
    _readarr_srv_media_root_folders: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_media_root_folders,
        default=[],
        hint='list of str',
        order=13
        )
      }}"
    _readarr_srv_user_data_manage_enable: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_user_data_manage_enable,
        default=false,
        hint='bool',
        order=14
        )
      }}"
    _readarr_srv_media_perms_folder: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_media_perms_folder,
        default='0755',
        hint='str',
        order=15
        )
      }}"
    _readarr_srv_media_set_perms_file_enable: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_media_set_perms_file_enable,
        default=false,
        hint='bool',
        order=16
        )
      }}"
    _readarr_srv_media_perms_file: "{{ {} | r_pufky.data.v3(
        raw=readarr_srv_media_perms_file,
        default='0644',
        hint='str',
        order=17
        )
      }}"

- name: 'Annotate | sanitize & annotate config defaults'
  ansible.builtin.set_fact:  # noqa jinja[spacing] readability.
    _readarr_cfg_bind_address: "{{ {} | r_pufky.data.v3(
        section='General',
        key='BindAddress',
        raw=readarr_cfg_bind_address,
        default='*',
        hint='str',
        order=1
        )
      }}"
    _readarr_cfg_port: "{{ {} | r_pufky.data.v3(
        section='General',
        key='Port',
        raw=readarr_cfg_port,
        default=8787,
        hint='int',
        order=2
        )
      }}"
    _readarr_cfg_url_base: "{{ {} | r_pufky.data.v3(
        section='General',
        key='UrlBase',
        raw=readarr_cfg_url_base,
        default='',
        hint='str',
        order=3
        )
      }}"
    _readarr_cfg_instance_name: "{{ {} | r_pufky.data.v3(
        section='General',
        key='InstanceName',
        raw=readarr_cfg_instance_name,
        default='Readarr',
        hint='str',
        order=4
        )
      }}"
    _readarr_cfg_enable_ssl: "{{ {} | r_pufky.data.v3(
        section='General',
        key='EnableSsl',
        raw=readarr_cfg_enable_ssl,
        default=false,
        hint='bool',
        order=5
        )
      }}"
    _readarr_cfg_ssl_port: "{{ {} | r_pufky.data.v3(
        section='General',
        key='SslPort',
        raw=readarr_cfg_ssl_port,
        default=6868,
        hint='int',
        order=6
        )
      }}"
    _readarr_cfg_ssl_cert_path: "{{ {} | r_pufky.data.v3(
        section='General',
        key='SslCertPath',
        raw=readarr_cfg_ssl_cert_path,
        data=(
          _readarr_srv_config_dir.data ~ 'readarr.pfx'
          if readarr_cfg_enable_ssl else
          ''
        ),
        default='',
        _dest=_readarr_srv_config_dir.data ~ 'readarr.pfx',
        hint='str',
        order=7
        )
      }}"
    _readarr_cfg_ssl_cert_password: "{{ {} | r_pufky.data.v3(
        section='General',
        key='SslCertPassword',
        raw=readarr_cfg_ssl_cert_password,
        default='',
        hint='str',
        sensitive=true,
        order=8
        )
      }}"
    _readarr_cfg_authentication_method: "{{ {} | r_pufky.data.v3(
        section='General',
        key='AuthenticationMethod',
        raw=readarr_cfg_authentication_method | capitalize,
        default='Forms',
        hint='str',
        order=9
        )
      }}"
    _readarr_cfg_authentication_required: "{{ {} | r_pufky.data.v3(
        section='General',
        key='AuthenticationRequired',
        raw=readarr_cfg_authentication_required,
        data=(
          'Enabled'
          if readarr_cfg_authentication_required else
          'DisabledForLocalAddresses'
        ),
        default=false,
        hint='str',
        order=10
        )
      }}"
    _readarr_cfg_api_key: "{{ {} | r_pufky.data.v3(
        section='General',
        key='ApiKey',
        raw=readarr_cfg_api_key,
        default=inventory_hostname | md5 | truncate(32, true, ''),
        hint='str',
        sensitive=true,
        order=11
        )
      }}"
    _readarr_cfg_log_level: "{{ {} | r_pufky.data.v3(
        section='General',
        key='LogLevel',
        raw=readarr_cfg_log_level | lower,
        default='info',
        hint='str',
        order=12
        )
      }}"
    _readarr_cfg_log_size_limit: "{{ {} | r_pufky.data.v3(
        section='General',
        key='LogSizeLimit',
        raw=readarr_cfg_log_size_limit,
        default=1,
        hint='int',
        deprecated=true,
        order=13
        )
      }}"
    _readarr_cfg_analytics_enabled: "{{ {} | r_pufky.data.v3(
        section='General',
        key='AnalyticsEnabled',
        raw=readarr_cfg_analytics_enabled,
        default=false,
        hint='bool',
        order=14
        )
      }}"
    _readarr_cfg_branch: "{{ {} | r_pufky.data.v3(
        section='General',
        key='Branch',
        raw=readarr_cfg_branch | lower,
        default='develop',
        hint='str',
        order=15
        )
      }}"
    _readarr_cfg_update_automatically: "{{ {} | r_pufky.data.v3(
        section='General',
        key='UpdateAutomatically',
        raw=readarr_cfg_update_automatically,
        default=false,
        hint='bool',
        order=16
        )
      }}"
    _readarr_cfg_update_mechanism: "{{ {} | r_pufky.data.v3(
        section='General',
        key='UpdateMechanism',
        raw=readarr_cfg_update_mechanism,
        data=(
          'BuiltIn'
          if readarr_cfg_update_mechanism else
          'Script'
        ),
        default=true,
        hint='bool',
        order=17
        )
      }}"
    _readarr_cfg_update_script_path: "{{ {} | r_pufky.data.v3(
        section='General',
        key='UpdateScriptPath',
        raw=readarr_cfg_update_script_path,
        data=(
          _readarr_srv_config_dir.data ~ 'update_script'
          if not readarr_cfg_update_mechanism else
          ''
        ),
        default='',
        _dest=_readarr_srv_config_dir.data ~ 'update_script',
        hint='str',
        order=18
        )
      }}"
    _readarr_cfg_launch_browser: "{{ {} | r_pufky.data.v3(
        section='General',
        key='LaunchBrowser',
        raw=readarr_cfg_launch_browser,
        default=false,
        hint='bool',
        order=19
        )
      }}"
    _readarr_cfg_database_type: "{{ {} | r_pufky.data.v3(
        section='database',
        raw=readarr_cfg_database_type | lower,
        default='sqlite',
        keep=false,
        hint='str',
        added='0.1.1',
        comment='Never set in config.xml.',
        order=1
        )
      }}"
    _readarr_cfg_database_host: "{{ {} | r_pufky.data.v3(
        section='database',
        key='PostgresHost',
        raw=readarr_cfg_database_host,
        default='localhost',
        keep=false if readarr_cfg_database_type == 'sqlite' else true,
        hint='str',
        added='0.1.1',
        order=2
        )
      }}"
    _readarr_cfg_database_port: "{{ {} | r_pufky.data.v3(
        section='database',
        key='PostgresPort',
        raw=readarr_cfg_database_port,
        default=5432,
        keep=false if readarr_cfg_database_type == 'sqlite' else true,
        hint='int',
        added='0.1.1',
        order=3
        )
      }}"
    _readarr_cfg_database_user: "{{ {} | r_pufky.data.v3(
        section='database',
        key='PostgresUser',
        raw=readarr_cfg_database_user,
        default='readarr',
        keep=false if readarr_cfg_database_type == 'sqlite' else true,
        hint='str',
        added='0.1.1',
        order=4
        )
      }}"
    _readarr_cfg_database_password: "{{ {} | r_pufky.data.v3(
        section='database',
        key='PostgresPassword',
        raw=readarr_cfg_database_password,
        default='',
        keep=false if readarr_cfg_database_type == 'sqlite' else true,
        hint='str',
        added='0.1.1',
        sensitive=true,
        order=5
        )
      }}"
    _readarr_cfg_database_main: "{{ {} | r_pufky.data.v3(
        section='database',
        key='PostgresMainDb',
        raw=readarr_cfg_database_main,
        default='readarr-main',
        keep=false if readarr_cfg_database_type == 'sqlite' else true,
        hint='str',
        added='0.1.1',
        order=6
        )
      }}"
    _readarr_cfg_database_log: "{{ {} | r_pufky.data.v3(
        section='database',
        key='PostgresLogDb',
        raw=readarr_cfg_database_log,
        default='readarr-log',
        keep=false if readarr_cfg_database_type == 'sqlite' else true,
        hint='str',
        added='0.1.1',
        order=7
        )
      }}"
    _readarr_cfg_database_cache: "{{ {} | r_pufky.data.v3(
        section='database',
        key='PostgresCacheDb',
        raw=readarr_cfg_database_cache,
        default='readarr-cache',
        keep=false if readarr_cfg_database_type == 'sqlite' else true,
        hint='str',
        added='0.1.1',
        order=8
        )
      }}"
    _readarr_cfg_theme: "{{ {} | r_pufky.data.v3(
        section='UI',
        key='Theme',
        raw=readarr_cfg_theme | lower,
        default='auto',
        hint='str',
        order=1
        )
      }}"

- name: 'Annotate | generate config map'
  ansible.builtin.set_fact:
    _readarr_map: '{{
        hostvars[inventory_hostname] | dict2items |
        selectattr("key", "match", "_readarr_cfg_*")
      }}'
    _readarr_order:
      - 'General'
      - 'database'
      - 'UI'
