---
###############################################################################
# Readarr Prep
###############################################################################
# *arr services use the same codebase; any bugs or fixes should be checked for
# all related services.

- name: 'Prep | assert SSL requirements'
  when: _readarr_cfg_enable_ssl.raw
  ansible.builtin.assert:
    quiet: true
    that:
      - _readarr_cfg_ssl_cert_path.parsed | length > 0
    fail_msg: >
      ✘ readarr_cfg_enable_ssl=true requires
      readarr_cfg_ssl_cert_path set.

      readarr_cfg_ssl_cert_path: '{{ _readarr_cfg_ssl_cert_path.raw }}'

# yamllint disable rule:line-length
- name: 'Prep | assert update script requirements'
  when: not _readarr_cfg_update_mechanism.raw
  ansible.builtin.assert:
    quiet: true
    that:
      - _readarr_cfg_update_script_path.parsed | length > 0
    fail_msg: >
      ✘ readarr_cfg_update_mechanism=false requires
      readarr_cfg_update_script_path set.

      readarr_cfg_update_script_path: '{{ _readarr_cfg_update_script_path.raw }}'
# yamllint enable rule:line-length

- name: 'Prep | READARR IS DEPRECATED ⚠'
  ansible.builtin.debug:
    msg: |
      ⚠ Readarr is archived and no longer developed.

      Future deployments may break without warning.

- name: 'Prep | manage users'
  when: _readarr_srv_create_user.raw
  ansible.builtin.include_role:
    name: 'r_pufky.deb.users'
    tasks_from: 'role_account_add.yml'
  vars:
    users_role_user: '{{ readarr_role_user }}'
    users_role_group: '{{ readarr_role_group }}'

- name: 'Prep | enumerate system user {{ _readarr_srv_user.raw }}'
  ansible.builtin.user:
    name: '{{ _readarr_srv_user.raw }}'
  check_mode: true
  changed_when: false
  register: _readarr_srv_user_query

- name: 'Prep | parse system user UID/GID'
  ansible.builtin.set_fact:
    _readarr_srv_user: '{{
        _readarr_srv_user |
        combine({"parsed": _readarr_srv_user_query.uid})
      }}'
    _readarr_srv_group: '{{
        _readarr_srv_group |
        combine({"parsed": _readarr_srv_user_query.group})
      }}'

- name: 'Prep | stop services'
  ansible.builtin.systemd:
    name: '{{ item }}'
    state: 'stopped'
  failed_when: false
  loop:
    - 'readarr.service'
